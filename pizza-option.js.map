{"version":3,"file":"pizza-option.js","sourceRoot":"","sources":["src/pizza-option.ts"],"names":[],"mappings":";;;;;;AAAA,uDAAuD;AACvD,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAGhD,IAAa,WAAW,GAAxB,MAAa,WAAY,SAAQ,UAAU;IAA3C;;QAgFE,kBAAa,GAAG,CAAC,EAAS,EAAE,EAAE;YAC5B,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,qBAAqB,EAAE;gBACrC,MAAM,EAAE;oBACN,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,WAAW;oBACvB,MAAM,EAAE,IAAI,CAAC,MAAM;yBAChB,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC;yBAChC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;iBAC/B;aACF,CAAC,CACH,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAxCC,IAAI,MAAM;QACR,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;IAC/D,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;4BACa,IAAI,CAAC,EAAE,CAAC,WAAW;;UAErC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CACnB,CAAC,CAAM,EAAE,EAAE;;YAAC,OAAA,IAAI,CAAA;;gBAEV,CAAC,CAAC,IAAI;;;uBAGC,IAAI,CAAC,EAAE,CAAC,WAAW;uBACnB,CAAA,MAAA,IAAI,CAAC,EAAE,CAAC,UAAU,mCAAI,QAAQ,GAAG,CAAC;gBACvC,CAAC,CAAC,OAAO;gBACT,CAAC,CAAC,UAAU;0BACJ,IAAI,CAAC,aAAa;wBACpB,CAAC,CAAC,IAAI;;;WAGnB,CAAA;SAAA,CACF;;KAEJ,CAAC;IACJ,CAAC;CAcF,CAAA;AA3FiB,kBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2C1B,CAAA;AAEc,sBAAU,GAAG;IAC3B,EAAE,EAAE,EAAC,IAAI,EAAE,MAAM,EAAC;CAClB,CAAA;AAhDS,WAAW;IADvB,aAAa,CAAC,cAAc,CAAC;GACjB,WAAW,CA4FvB;SA5FY,WAAW","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {LitElement, html, css} from 'lit';\nimport {customElement} from 'lit/decorators.js';\n\n@customElement('pizza-option')\nexport class PizzaOption extends LitElement {\n  static override styles = css`\n    :host {\n    }\n\n    .Heading {\n      border-bottom: 1px solid #cecece;\n      color: #5f5f5f;\n      font-size: 18px;\n      font-weight: normal;\n    }\n\n    .Choices {\n      display: flex;\n      flex-direction: row;\n      flex-wrap: wrap;\n      gap: 20px;\n    }\n\n    .Choice {\n      accent-color: #d93131;\n      border: 1px solid #d93131;\n      border-radius: 8px;\n      color: #d93131;\n      display: flex;\n      flex: 0 0 auto;\n      flex-direction: row;\n      font-size: 20px;\n      gap: 16px;\n      padding: 16px 32px;\n    }\n\n    .Choice:has(:checked) {\n      background-color: #d94848;\n      color: #fff;\n    }\n\n    .Choice:focus-within {\n      box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    }\n\n    .Input:focus {\n      outline: none;\n    }\n  `;\n\n  static override properties = {\n    og: {type: Object},\n  };\n\n  declare og: any;\n\n  get inputs() {\n    return Array.from(this.renderRoot.querySelectorAll('input'));\n  }\n\n  override render() {\n    return html`\n      <h3 class=\"Heading\">${this.og.description}</h3>\n      <div class=\"Choices\">\n        ${this.og.choices.map(\n          (c: any) => html`\n            <label class=\"Choice\">\n              ${c.name}\n              <input\n                class=\"Input\"\n                name=${this.og.description}\n                type=${this.og.maxSelects ?? Infinity < 3\n                  ? 'radio'\n                  : 'checkbox'}\n                @change=${this._handleChange}\n                value=${c.name}\n              />\n            </label>\n          `\n        )}\n      </div>\n    `;\n  }\n\n  _handleChange = (_e: Event) => {\n    this.dispatchEvent(\n      new CustomEvent('pizza-option-change', {\n        detail: {\n          og: this.og.description,\n          values: this.inputs\n            .filter((input) => input.checked)\n            .map((input) => input.value),\n        },\n      })\n    );\n  };\n}\n"]}